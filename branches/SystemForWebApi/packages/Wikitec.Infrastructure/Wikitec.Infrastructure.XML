<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wikitec.Infrastructure</name>
    </assembly>
    <members>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapAttribute">
            <summary>
            自定义AutoMap特性
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapAttribute.#ctor(System.Type[])">
            <summary>
            构造函数
            </summary>
            <param name="targetTypes">目标类型</param>
        </member>
        <member name="P:Wikitec.Infrastructure.AutoMapper.AutoMapAttribute.TargetTypes">
            <summary>
            目标类型，只读。
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.AutoMapper.AutoMapAttribute.Direction">
            <summary>
            AutoMap的方向
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapDirection">
            <summary>
            AutoMap方向的枚举
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.AutoMapper.AutoMapDirection.From">
            <summary>
            从目标类型映射而来
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.AutoMapper.AutoMapDirection.To">
            <summary>
            向目标类型映射而去
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapExtensions">
            <summary>
             AutoMap的扩展方法
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapExtensions.MapTo``1(System.Object)">
            <summary>
            使用AutoMapper类库将一个对象转换为另一个对象。创建一个新的<see cref="!:TDestination"/>的对象
            在调用该方法之前，必须要有两个对象的映射关系。
            </summary>
            <typeparam name="TDestination">
            目标对象的类型
            </typeparam>
            <param name="source">
            源对象
            </param>
            <returns>
            目标对象<see cref="!:TDestination"/>.
            </returns>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapExtensions.MapTo``2(``0,``1)">
            <summary>
            从源对象到目标对象执行映射。
            在调用该方法之前，必须要有两个对象的映射关系。
            </summary>
            <typeparam name="TSource">源对象类型</typeparam>
            <typeparam name="TDestination">目标对象类型</typeparam>
            <param name="source">源对象</param>
            <param name="destination">目标对象</param>
            <returns>目标对象<see cref="!:TDestination"/>.</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapFromAttribute">
            <summary>
            AutoMapFrom特性，标示当前类可以从目标类型映射而来
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapFromAttribute.#ctor(System.Type[])">
            <summary>
            构造函数
            </summary>
            <param name="targetTypes">目标类型</param>
        </member>
        <member name="P:Wikitec.Infrastructure.AutoMapper.AutoMapFromAttribute.Direction">
            <summary>
            映射方向
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapEntityFrameworkExtensions">
            <summary>
            扩展EntityFrameworkExtensions
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapperHelper">
            <summary>
            AutoMapper帮助类，主要用来创建映射
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperHelper.CreateMap(System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="type">目标类型</param>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperHelper.CreateMap``1(System.Type)">
            <summary>
            创建映射
            </summary>
            <typeparam name="TAttribute">AutoMapAttribute类型</typeparam>
            <param name="type">AutoMapAttribute</param>
        </member>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer">
            <summary>
             AutoMapper初始化器，用来自动创建映射关系
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.SyncObj">
            <summary>
            同步锁
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.createdMappingsBefore">
            <summary>
            是否已经创建过映射
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.typeFinder">
            <summary>
            TypeFinder, 类型查找器
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.#ctor(Wikitec.Infrastructure.Reflection.TypeFinder)">
            <summary>
            构造函数
            </summary>
            <param name="typeFinder">类型查找器</param>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.Initialize">
            <summary>
            初始化方法
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.CreateMappings">
            <summary>
            创建映射
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.FindAndAutoMapTypes">
            <summary>
            查找并且构造映射
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperInitializer.CreateOtherMappings">
            <summary>
            构造其他特殊的映射
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.AutoMapper.AutoMapperApplicationProfile.typeFinder">
            <summary>
            TypeFinder, 类型查找器
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperApplicationProfile.#ctor(Wikitec.Infrastructure.Reflection.TypeFinder)">
            <summary>
            构造函数
            </summary>
            <param name="typeFinder">类型查找器</param>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapperApplicationProfile.CreateMap``1(System.Type,AutoMapper.Profile)">
            <summary>
            创建映射
            </summary>
            <typeparam name="TAttribute">AutoMapAttribute类型</typeparam>
            <param name="type">AutoMapAttribute</param>
        </member>
        <member name="T:Wikitec.Infrastructure.AutoMapper.AutoMapToAttribute">
            <summary>
            AutoMapTo特性，标示当前类可以映射到目标类型
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.AutoMapper.AutoMapToAttribute.#ctor(System.Type[])">
            <summary>
            构造函数
            </summary>
            <param name="targetTypes">目标类型</param>
        </member>
        <member name="P:Wikitec.Infrastructure.AutoMapper.AutoMapToAttribute.Direction">
            <summary>
            映射方向
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Cache.ICache">
            <summary>
            缓存相关操作的接口
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Add(System.String,System.Object)">
            <summary>
            向Cache中添加缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Add(System.String,System.Object,System.Int32)">
            <summary>
            向Cache中添加缓存对象，如果时间达到指定的秒数即被移除
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
            <param name="seconds">固定的超时秒数</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            向Cache中添加缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
            <param name="slidingExpiration">指定时间段</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Add(System.String,System.Object,System.DateTime)">
            <summary>
            向Cache中添加缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
            <param name="expires">过期日期和时间</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Exists(System.String)">
            <summary>
            从Cache中判断指定的Key是否已经有缓存数据
            </summary>
            <param name="key">缓存Key</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Get``1(System.String)">
            <summary>
            从Cache中获取缓存的对象
            </summary>
            <typeparam name="T">缓存对象的类型</typeparam>
            <param name="key">缓存Key</param>
            <returns>缓存的对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Max(System.String,System.Object)">
            <summary>
            向Cache中永久缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Remove(System.String)">
            <summary>
            从Cache中移除缓存项
            </summary>
            <param name="key">缓存Key</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.ICache.Test">
            <summary>
            测试Cache是否可用
            </summary>
            <returns>Cache是否可用</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache">
            <summary>
            基于Runtime缓存的实现
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.cache">
            <summary>
            MemoryCache
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.defaultCacheItemPolicy">
            <summary>
            CacheItemPolicy
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Add(System.String,System.Object)">
            <summary>
            向Cache中添加缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Add(System.String,System.Object,System.Int32)">
            <summary>
            向Cache中添加缓存对象，如果时间达到指定的秒数即被移除
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
            <param name="seconds">固定的超时秒数</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            向Cache中添加缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
            <param name="slidingExpiration">指定时间段</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Add(System.String,System.Object,System.DateTime)">
            <summary>
            向Cache中添加缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
            <param name="expires">过期日期和时间</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Exists(System.String)">
            <summary>
            从Cache中判断指定的Key是否已经有缓存数据
            </summary>
            <param name="key">缓存Key</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Get``1(System.String)">
            <summary>
            从Cache中获取缓存的对象
            </summary>
            <typeparam name="T">缓存对象的类型</typeparam>
            <param name="key">缓存Key</param>
            <returns>缓存的对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Max(System.String,System.Object)">
            <summary>
            向Cache中永久缓存对象
            </summary>
            <param name="key">缓存Key</param>
            <param name="obj">要缓存的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Remove(System.String)">
            <summary>
            从Cache中移除缓存项
            </summary>
            <param name="key">缓存Key</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Cache.Runtime.RuntimeCache.Test">
            <summary>
            测试Cache是否可用
            </summary>
            <returns>Cache是否可用</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Collections.Extensions.CollectionExtensions">
            <summary>
            Extension methods for Collections.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.Extensions.CollectionExtensions.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Checks whatever given collection object is null or has no item.
            </summary>
            <typeparam name="T">
            集合元素类型
            </typeparam>
            <param name="collection">
            The collection.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Collections.Extensions.DictionaryExtensions">
            <summary>
            Extension methods for Dictionary.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.Extensions.DictionaryExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets a value from the dictionary with given key. Returns default value if can not find.
            </summary>
            <param name="dictionary">Dictionary to check and get</param>
            <param name="key">Key to find the value</param>
            <typeparam name="TKey">Type of the key</typeparam>
            <typeparam name="TValue">Type of the value</typeparam>
            <returns>Value if found, default if can not found.</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.Extensions.DictionaryExtensions.TryGetValue``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0@)">
            <summary>
            This method is used to try to get a value in a dictionary if it does exists.
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <param name="dictionary">The collection object</param>
            <param name="key">Key</param>
            <param name="value">Value of the key (or default value if key not exists)</param>
            <returns>True if key does exists in the dictionary</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Collections.ITypeList">
            <summary>
            A shortcut for <see cref="T:Wikitec.Infrastructure.Collections.ITypeList`1"/> to use object as base type.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Collections.ITypeList`1">
            <summary>
            Extends <see cref="T:System.Collections.Generic.IList`1"/> to add restriction a specific base type.
            </summary>
            <typeparam name="TBaseType">Base Type of <see cref="T:System.Type"/>s in this list</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.ITypeList`1.Add``1">
            <summary>
            Adds a type to list.
            </summary>
            <typeparam name="T">Type</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.ITypeList`1.Contains``1">
            <summary>
            Checks if a type exists in the list.
            </summary>
            <typeparam name="T">Type</typeparam>
            <returns>if a type exists in the list</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.ITypeList`1.Remove``1">
            <summary>
            Removes a type from list
            </summary>
            <typeparam name="T">BaseType</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Collections.TypeList">
            <summary>
            A shortcut for <see cref="T:Wikitec.Infrastructure.Collections.TypeList`1"/> to use object as base type.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Collections.TypeList`1">
            <summary>
            Extends <see cref="T:System.Collections.Generic.List`1"/> to add restriction a specific base type.
            </summary>
            <typeparam name="TBaseType">Base Type of <see cref="T:System.Type"/>s in this list</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Collections.TypeList`1.typeList">
            <summary>
            typeList
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Collections.TypeList`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Add``1">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Add(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Insert(System.Int32,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.IndexOf(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Contains``1">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Contains(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Remove``1">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Remove(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.CopyTo(System.Type[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Collections.TypeList`1.CheckType(System.Type)">
            <inheritdoc/>
        </member>
        <member name="P:Wikitec.Infrastructure.Collections.TypeList`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Wikitec.Infrastructure.Collections.TypeList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Wikitec.Infrastructure.Collections.TypeList`1.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> at the specified index.
            </summary>
            <param name="index">Index.</param>
            <returns>type</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.AppDataContext">
            <summary>
            AppDataContext
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.AppDataContext.#ctor(System.String)">
            <summary>
            AppDataContext
            </summary>
            <param name="nameOrConnectionString">连接字符串名</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.AppDataContext.SaveChanges">
            <summary>
            重写了基类的SaveChanges,自动处理了：
            SetCreationAuditProperties，AutoFillTenantId，SetModificationAuditProperties，HandleSoftDelete
            </summary>
            <returns>操作结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.AppDataContext.AutoFillTenantId(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
            自动填充租户id 
            </summary>
            <param name="entity">当前实体</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.AppDataContext.AutoFillOrgId(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
            自动填充机构id 
            </summary>
            <param name="entity">当前实体</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.AppDataContext.SetCreationAuditProperties(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
            自动设置'创建审计'相关属性
            </summary>
            <param name="entity">当前实体</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.AppDataContext.SetModificationAuditProperties(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
            自动设置'修改审计'相关属性
            </summary>
            <param name="entry">当前实体</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.AppDataContext.HandleSoftDelete(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
            处理逻辑删除
            </summary>
            <param name="entry">当前实体</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.AppDataContext.Session">
            <summary>
            Session
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.CollectionUpdater`2">
            <summary>
            集合数据更新器
            </summary>
            <typeparam name="T">集合内实体类型</typeparam>
            <typeparam name="TPrimaryKey">实体'主键'类型</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.CollectionUpdater`2.Update(`0,`0,System.Data.Entity.DbContext)">
            <summary>
            update
            </summary>        
            <param name="existingList">现有数据列表，从数据库中读取到的</param>
            <param name="clientList">新的数据列表，从前台传过来的</param>
            <param name="context">数据上下文</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.IQueryable.RepositoryBase`1">
            <summary>
            RepositoryBaseForIQueryable
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.IQueryable.IRepository`1">
            <summary>
            IRepository接口
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Add(`0)">
            <summary>
            向仓储中添加一条对象
            </summary> 
            <param name="entity">要添加的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Remove(`0)">
            <summary>
            从删除中删除对象
            </summary>
            <param name="entity">被删除的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Delete(`0)">
            <summary>
            从删除中删除对象通过ID删除
            </summary>
            <param name="entity">被删除的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Modify(`0)">
            <summary>
            将对象的修改保存到仓储中
            </summary>
            <param name="entity">被修改的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetModel(System.Object)">
            <summary>
            通过Id获取一个对象
            </summary>
            <param name="id">对象ID</param>
            <returns>目标对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetAll">
            <summary>
            获取所有对象
            </summary>
            <returns>目标对象列表</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetAllSubType``1">
            <summary>
            获取所有子类型列表
            </summary>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <returns>子类型列表</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetBySpec(Wikitec.Infrastructure.Data.Specification.ISpecification{`0})">
            <summary>
            获取所有匹配规格的对象
            </summary>
            <param name="specification">查找结果的规格</param>
            <returns>所有匹配规格的对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetSubTypeBySpec``1(Wikitec.Infrastructure.Data.Specification.ISpecification{``0})">
            <summary>
            获取所有匹配规格的子类型
            </summary>        
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="specification">查找结果的规格</param>
            <returns>所有匹配规格的子类型</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            分页获取所有对象
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            分页获取子类型对象
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            分页获取
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">查找结果的规格</param>
            <param name="ascending">指定是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            分页获取
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">查找结果的规格</param>
            <param name="ascending">制定是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetNoTenantFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            条件查询（不根据租户id进行过滤，仅仅对租户特定数据有效，对非租户特定的数据等同于GetFilteredElements）
            </summary>
            <param name="filter">过滤条件</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            条件查询
            </summary>
            <param name="filter">筛选条件</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetFilteredSubTypeElements``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            通过条件查询子类型
            </summary>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            条件查询
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetFilteredSubTypeElements``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            通过条件查询子类型
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">制定是否升序</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetPageResult``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">规格</param>
            <param name="ascending">是否升序</param>
            <returns>分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetPageSubTypeResult``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            获取子类型分页数据
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">筛选规格</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetFilteredPageResult``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            通过条件获取分页数据
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetFilteredSubTypePageResult``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            通过条件获取子类型的分页数据
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.IsExsist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在符合条件的对象
            </summary>
            <param name="filter">筛选条件</param>
            <returns>true:存在,flase:不存在</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.IsExsistSubType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            检测是否存在符合条件的子类型对象
            </summary>
            <typeparam name="TSEntity">子对象类型</typeparam>        
            <param name="filter">过滤条件</param>
            <returns>是否存在符合条件的子类型对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetRecordCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
            <summary>
            获取总记录数
            </summary>
            <param name="filter">筛选条件</param>
            <param name="isTenanted">是否是租户特定的</param>
            <returns>符合条件的总记录数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.GetSubTypeRecordCount``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取子类型记录数
            </summary>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <returns>TEntity</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Sum(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            计算和
            </summary>
            <param name="filter">过滤条件</param>
            <returns>SUM值</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            统计总数
            </summary>
            <param name="filter">过滤条件</param>
            <returns>总数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计子类型的总数
            </summary>
            <typeparam name="TSEntity">子类型</typeparam>
            <param name="filter">过滤条件</param>
            <returns>子类型的总数</returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.IRepository`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Data.IQueryable.RepositoryBase`1.dataBaseSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.RepositoryBase`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            利用构造函数设置数据库上下文和实体集合
            </summary>
            <param name="context">数据库上下文</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.RepositoryBase`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.RepositoryBase`1.DbSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.RepositoryBase`1.DataContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.IQueryable.RepositoryBaseForOrg`1">
            <summary>
             包含组织机构筛选条件的DataBase
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Data.IQueryable.RepositoryBaseForOrg`1.dataBaseSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.RepositoryBaseForOrg`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            利用构造函数设置数据库上下文和实体集合
            </summary>
            <param name="context">数据库上下文</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.RepositoryBaseForOrg`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.RepositoryBaseForOrg`1.Session">
            <summary>
            Session
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.RepositoryBaseForOrg`1.DbSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.RepositoryBaseForOrg`1.DataContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1">
            <summary>
             包含组织机构筛选条件的DataBase
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.dataBaseSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            利用构造函数设置数据库上下文和实体集合
            </summary>
            <param name="context">数据库上下文</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Add(`0)">
            <summary>
            添加一个实体(带有租户和机构id)
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.AddForNoOrg(`0)">
            <summary>
            添加一个与租户/机构无关的实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Remove(`0)">
            <summary>
            删除一个实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Delete(`0)">
            <summary>
            删除一个实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Modify(`0)">
            <summary>
            修改一个实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetModel(System.Object)">
            <summary>
            获得一个实体
            </summary>
            <param name="id">id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetAll">
            <summary>
            获取全部实体
            </summary>
            <returns>全部实体</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetBySpec(Wikitec.Infrastructure.Data.Specification.ISpecification{`0})">
            <summary>
            获取指定的实体
            </summary>
            <param name="specification">指定的条件</param>
            <returns>指定的实体</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="TS">实体类型</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            获取指定的分页数据
            </summary>
            <typeparam name="TS">实体类型</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">指定的条件</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetNoTenantFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取没有租户和机构筛选的数据
            </summary>
            <param name="filter">筛选条件</param>
            <returns>没有租户和机构筛选的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取筛选的数据
            </summary>
            <param name="filter">筛选条件</param>
            <returns>筛选的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetFilteredElementsWithout(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取没有租户和机构筛选的数据
            </summary>
            <param name="filter">筛选条件</param>
            <returns>没有租户和机构筛选的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取分页筛选后的数据
            </summary>
            <typeparam name="TS">实体类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页的筛选后的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetPageResult``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="TS">当前实体类型</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">指定的条件</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetFilteredPageResult``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取筛选后的分页数据
            </summary>
            <typeparam name="TS">当前实体类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>筛选后的分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetAllSubType``1">
            <summary>
            获取所有的子类型
            </summary>
            <typeparam name="TSEntity">子类型</typeparam>
            <returns>所有的子类型</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetSubTypeBySpec``1(Wikitec.Infrastructure.Data.Specification.ISpecification{``0})">
            <summary>
            获取指定的子类型
            </summary>
            <typeparam name="TSEntity">子类型</typeparam>
            <param name="specification">指定的条件</param>
            <returns>指定的子类型</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            获取分页的子类型数据
            </summary>
            <typeparam name="TS">TS</typeparam>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录条数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页的子类型数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            获取筛选的子类型分页数据
            </summary>
            <typeparam name="TS">TS</typeparam>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录条数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">指定的筛选条件</param>
            <param name="ascending">是否升序</param>
            <returns>筛选的子类型分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetFilteredSubTypeElements``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取筛选后的子类型数据
            </summary>
            <typeparam name="TSEntity">子类型数据</typeparam>
            <param name="filter">筛选条件</param>
            <returns>筛选后的子类型数据</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetFilteredSubTypeElements``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)" -->
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetPageSubTypeResult``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            获取分页的子类型数据
            </summary>
            <typeparam name="S">TS</typeparam>
            <typeparam name="SEntity">SEntity</typeparam>        
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录条数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页的子类型数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetFilteredSubTypePageResult``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            获取筛选后的子类型分页数据
            </summary>
            <typeparam name="S">S</typeparam>
            <typeparam name="SEntity">SEntity</typeparam>
            <param name="filter">filter</param>
            <param name="pageIndex">pageIndex</param>
            <param name="pageSize">pageSize</param>
            <param name="orderByExpression">orderByExpression</param>
            <param name="ascending">ascending</param>
            <returns>筛选后的子类型分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.IsExsist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            指定的数据是否存在
            </summary>
            <param name="filter">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.IsExsistSubType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            指定的子类型是否存在
            </summary>
            <typeparam name="TSEntity"></typeparam>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetRecordCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
            <summary>
            获取指定的数据个数
            </summary>
            <param name="filter">查询条件</param>
            <param name="isTenanted">是否为租户机构特定的</param>
            <returns>指定的数据个数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.GetSubTypeRecordCount``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取指定的子类型数据个数
            </summary>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="filter">过滤条件</param>
            <returns>指定的子类型数据个数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Sum(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            SUM
            </summary>
            <param name="filter">过滤条件</param>
            <returns>sum</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            COUNT
            </summary>
            <param name="filter">过滤条件</param>
            <returns>count</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            COUNT
            </summary>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="filter">过滤条件</param>
            <returns>count</returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.Session">
            <summary>
            Session
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.DbSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IQueryable.Tenant.RepositoryBaseForOrg`1.DataContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.IRepository`1">
            <summary>
            IRepository接口
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.Add(`0)">
            <summary>
            向仓储中添加一条对象
            </summary> 
            <param name="entity">要添加的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.Remove(`0)">
            <summary>
            从删除中删除对象
            </summary>
            <param name="entity">被删除的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.Delete(`0)">
            <summary>
            从删除中删除对象通过ID删除
            </summary>
            <param name="entity">被删除的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.Modify(`0)">
            <summary>
            将对象的修改保存到仓储中
            </summary>
            <param name="entity">被修改的对象</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetModel(System.Object)">
            <summary>
            通过Id获取一个对象
            </summary>
            <param name="id">对象ID</param>
            <returns>目标对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetAll">
            <summary>
            获取所有对象
            </summary>
            <returns>目标对象列表</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetAllSubType``1">
            <summary>
            获取所有子类型列表
            </summary>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <returns>子类型列表</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetBySpec(Wikitec.Infrastructure.Data.Specification.ISpecification{`0})">
            <summary>
            获取所有匹配规格的对象
            </summary>
            <param name="specification">查找结果的规格</param>
            <returns>所有匹配规格的对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetSubTypeBySpec``1(Wikitec.Infrastructure.Data.Specification.ISpecification{``0})">
            <summary>
            获取所有匹配规格的子类型
            </summary>        
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="specification">查找结果的规格</param>
            <returns>所有匹配规格的子类型</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            分页获取所有对象
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            分页获取子类型对象
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            分页获取
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">查找结果的规格</param>
            <param name="ascending">指定是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            分页获取
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">查找结果的规格</param>
            <param name="ascending">制定是否升序</param>
            <returns>查询得到的分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetNoTenantFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            条件查询（不根据租户id进行过滤，仅仅对租户特定数据有效，对非租户特定的数据等同于GetFilteredElements）
            </summary>
            <param name="filter">过滤条件</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            条件查询
            </summary>
            <param name="filter">筛选条件</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetFilteredSubTypeElements``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            通过条件查询子类型
            </summary>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            条件查询
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetFilteredSubTypeElements``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            通过条件查询子类型
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">制定是否升序</param>
            <returns>条件查询的结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetPageResult``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">规格</param>
            <param name="ascending">是否升序</param>
            <returns>分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetPageSubTypeResult``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            获取子类型分页数据
            </summary>
            <typeparam name="TS">排序字段类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">筛选规格</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetFilteredPageResult``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            通过条件获取分页数据
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>分页结果</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetFilteredSubTypePageResult``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            通过条件获取子类型的分页数据
            </summary>
            <typeparam name="TS">对象类型</typeparam>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">指定是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.IsExsist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在符合条件的对象
            </summary>
            <param name="filter">筛选条件</param>
            <returns>true:存在,flase:不存在</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.IsExsistSubType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            检测是否存在符合条件的子类型对象
            </summary>
            <typeparam name="TSEntity">子对象类型</typeparam>        
            <param name="filter">过滤条件</param>
            <returns>是否存在符合条件的子类型对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetRecordCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
            <summary>
            获取总记录数
            </summary>
            <param name="filter">筛选条件</param>
            <param name="isTenanted">是否是租户特定的</param>
            <returns>符合条件的总记录数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.GetSubTypeRecordCount``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取子类型记录数
            </summary>
            <typeparam name="TSEntity">子类的类型</typeparam>
            <param name="filter">筛选条件</param>
            <returns>TEntity</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.Sum(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            计算和
            </summary>
            <param name="filter">过滤条件</param>
            <returns>SUM值</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            统计总数
            </summary>
            <param name="filter">过滤条件</param>
            <returns>总数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IRepository`1.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计子类型的总数
            </summary>
            <typeparam name="TSEntity">子类型</typeparam>
            <param name="filter">过滤条件</param>
            <returns>子类型的总数</returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.IRepository`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.IUnitOfWork">
            <summary>
            UnitOfWork接口
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.IUnitOfWork.Commit">
            <summary>
            提交
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Messages.exception_FilterCannotBeNull">
            <summary>
              Looks up a localized string similar to FilterExpression cannot be null.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Messages.exception_InvalidPageIndex">
            <summary>
              Looks up a localized string similar to PageIndex is less than zero.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Messages.exception_InvalidPageSize">
            <summary>
              Looks up a localized string similar to PageSize is less than zero.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Messages.exception_OrderByExpressionCannotBeNull">
            <summary>
              Looks up a localized string similar to OrderByExpress cannot be null.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Messages.exception_SpecificationIsNull">
            <summary>
              Looks up a localized string similar to Specification cannot be null.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.PagedResult`1">
            <summary>
            分页结果
            </summary>
            <typeparam name="TEntity">对象类型</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.PagedResult`1.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Constructor
            </summary>
            <param name="pageIndex">页索引</param>
            <param name="pageSize">每页记录数</param>
            <param name="recordCount">总记录数</param>
            <param name="list">数据列表</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.PagedResult`1.List">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.PagedResult`1.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.PagedResult`1.PageIndex">
            <summary>
            页索引
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.PagedResult`1.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.PagedResult`1.PageCount">
            <summary>
            页的总数
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.PagedResult`1.ExtrMessage">
            <summary>
            附加信息，在分页中需要补充的信息
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.RepositoryBase`1">
            <summary>
            数据仓库基类
            </summary>
            <typeparam name="TEntity">对象类型</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Data.RepositoryBase`1.dataBaseSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            利用构造函数设置数据库上下文和实体集合
            </summary>
            <param name="context">数据库上下文</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.Add(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.Delete(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.Modify(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetModel(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetAll">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetBySpec(Wikitec.Infrastructure.Data.Specification.ISpecification{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetNoTenantFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetPageResult``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetFilteredPageResult``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetAllSubType``1">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetSubTypeBySpec``1(Wikitec.Infrastructure.Data.Specification.ISpecification{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetFilteredSubTypeElements``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetFilteredSubTypeElements``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetPageSubTypeResult``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetFilteredSubTypePageResult``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.IsExsist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.IsExsistSubType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetRecordCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.GetSubTypeRecordCount``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.Sum(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBase`1.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBase`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBase`1.DbSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBase`1.DataContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.RepositoryBaseForOrg`1">
            <summary>
             包含组织机构筛选条件的DataBase
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Data.RepositoryBaseForOrg`1.dataBaseSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForOrg`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            利用构造函数设置数据库上下文和实体集合
            </summary>
            <param name="context">数据库上下文</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForOrg`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForOrg`1.Session">
            <summary>
            Session
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForOrg`1.DbSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForOrg`1.DataContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1">
            <summary>
             针对租户特定的实体的RepositoryBase, 属性依赖于IAppSession
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.dataBaseSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            利用构造函数设置数据库上下文和实体集合
            </summary>
            <param name="context">数据库上下文</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Add(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Delete(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Modify(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetModel(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetAll">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetBySpec(Wikitec.Infrastructure.Data.Specification.ISpecification{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetNoTenantFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetPageResult``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetFilteredPageResult``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetAllSubType``1">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetSubTypeBySpec``1(Wikitec.Infrastructure.Data.Specification.ISpecification{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetFilteredSubTypeElements``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetFilteredSubTypeElements``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetPageSubTypeResult``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetFilteredSubTypePageResult``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.IsExsist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.IsExsistSubType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetRecordCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.GetSubTypeRecordCount``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Sum(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <inheritdoc/>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.Session">
            <summary>
            Session
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.DbSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.RepositoryBaseForTenants`1.DataContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Wikitec.Infrastructure.Data.Specification.DistinctSpecification" -->
        <member name="T:Wikitec.Infrastructure.Data.Specification.ExpressionBuilder">
            <summary>
            Extension methods for add And and Or with parameters rebinder
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Specification.ExpressionBuilder.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            Compose two expression and merge all in a new expression
            </summary>
            <typeparam name="T">Type of params in expression</typeparam>
            <param name="first">Expression instance</param>
            <param name="second">Expression to merge</param>
            <param name="merge">Function to merge</param>
            <returns>New merged expressions</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Specification.ExpressionBuilder.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            And operator
            </summary>
            <typeparam name="T">Type of params in expression</typeparam>
            <param name="first">Right Expression in AND operation</param>
            <param name="second">Left Expression in And operation</param>
            <returns>New AND expression</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Specification.ExpressionBuilder.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Or operator
            </summary>
            <typeparam name="T">Type of param in expression</typeparam>
            <param name="first">Right expression in OR operation</param>
            <param name="second">Left expression in OR operation</param>
            <returns>New Or expressions</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1">
            <summary>
             包含组织机构筛选条件的DataBase
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.dataBaseSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            利用构造函数设置数据库上下文和实体集合
            </summary>
            <param name="context">数据库上下文</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Add(`0)">
            <summary>
            添加一个实体(带有租户和机构id)
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.AddForNoOrg(`0)">
            <summary>
            添加一个与租户/机构无关的实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Remove(`0)">
            <summary>
            删除一个实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Delete(`0)">
            <summary>
            删除一个实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Modify(`0)">
            <summary>
            修改一个实体
            </summary>
            <param name="entity">entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetModel(System.Object)">
            <summary>
            获得一个实体
            </summary>
            <param name="id">id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetAll">
            <summary>
            获取全部实体
            </summary>
            <returns>全部实体</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetBySpec(Wikitec.Infrastructure.Data.Specification.ISpecification{`0})">
            <summary>
            获取指定的实体
            </summary>
            <param name="specification">指定的条件</param>
            <returns>指定的实体</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="TS">实体类型</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            获取指定的分页数据
            </summary>
            <typeparam name="TS">实体类型</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">指定的条件</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetNoTenantFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取没有租户和机构筛选的数据
            </summary>
            <param name="filter">筛选条件</param>
            <returns>没有租户和机构筛选的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取筛选的数据
            </summary>
            <param name="filter">筛选条件</param>
            <returns>筛选的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetFilteredElementsWithout(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取没有租户和机构筛选的数据
            </summary>
            <param name="filter">筛选条件</param>
            <returns>没有租户和机构筛选的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取分页筛选后的数据
            </summary>
            <typeparam name="TS">实体类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页的筛选后的数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetPageResult``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{`0},System.Boolean)">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="TS">当前实体类型</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">指定的条件</param>
            <param name="ascending">是否升序</param>
            <returns>分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetFilteredPageResult``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取筛选后的分页数据
            </summary>
            <typeparam name="TS">当前实体类型</typeparam>
            <param name="filter">筛选条件</param>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>筛选后的分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetAllSubType``1">
            <summary>
            获取所有的子类型
            </summary>
            <typeparam name="TSEntity">子类型</typeparam>
            <returns>所有的子类型</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetSubTypeBySpec``1(Wikitec.Infrastructure.Data.Specification.ISpecification{``0})">
            <summary>
            获取指定的子类型
            </summary>
            <typeparam name="TSEntity">子类型</typeparam>
            <param name="specification">指定的条件</param>
            <returns>指定的子类型</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            获取分页的子类型数据
            </summary>
            <typeparam name="TS">TS</typeparam>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录条数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页的子类型数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetPagedSubTypeElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            获取筛选的子类型分页数据
            </summary>
            <typeparam name="TS">TS</typeparam>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录条数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="specification">指定的筛选条件</param>
            <param name="ascending">是否升序</param>
            <returns>筛选的子类型分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetFilteredSubTypeElements``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取筛选后的子类型数据
            </summary>
            <typeparam name="TSEntity">子类型数据</typeparam>
            <param name="filter">筛选条件</param>
            <returns>筛选后的子类型数据</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetFilteredSubTypeElements``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)" -->
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetPageSubTypeResult``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},Wikitec.Infrastructure.Data.Specification.ISpecification{``1},System.Boolean)">
            <summary>
            获取分页的子类型数据
            </summary>
            <typeparam name="S">TS</typeparam>
            <typeparam name="SEntity">SEntity</typeparam>        
            <param name="pageIndex">页码下标</param>
            <param name="pageSize">每页记录条数</param>
            <param name="orderByExpression">排序表达式</param>
            <param name="ascending">是否升序</param>
            <returns>分页的子类型数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetFilteredSubTypePageResult``2(System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Boolean)">
            <summary>
            获取筛选后的子类型分页数据
            </summary>
            <typeparam name="S">S</typeparam>
            <typeparam name="SEntity">SEntity</typeparam>
            <param name="filter">filter</param>
            <param name="pageIndex">pageIndex</param>
            <param name="pageSize">pageSize</param>
            <param name="orderByExpression">orderByExpression</param>
            <param name="ascending">ascending</param>
            <returns>筛选后的子类型分页数据</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.IsExsist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            指定的数据是否存在
            </summary>
            <param name="filter">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.IsExsistSubType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            指定的子类型是否存在
            </summary>
            <typeparam name="TSEntity"></typeparam>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetRecordCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)">
            <summary>
            获取指定的数据个数
            </summary>
            <param name="filter">查询条件</param>
            <param name="isTenanted">是否为租户机构特定的</param>
            <returns>指定的数据个数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.GetSubTypeRecordCount``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取指定的子类型数据个数
            </summary>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="filter">过滤条件</param>
            <returns>指定的子类型数据个数</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Sum(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            SUM
            </summary>
            <param name="filter">过滤条件</param>
            <returns>sum</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            COUNT
            </summary>
            <param name="filter">过滤条件</param>
            <returns>count</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            COUNT
            </summary>
            <typeparam name="TSEntity">TSEntity</typeparam>
            <param name="filter">过滤条件</param>
            <returns>count</returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Context">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.Session">
            <summary>
            Session
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.DbSet">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Data.Tenant.RepositoryBaseForOrg`1.DataContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity">
            <summary>
            有int类型主键的受审计的实体
            A shortcut of <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity`1"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity`1">
            <summary>
            带有泛型类型主键，并有常见审计的实体基类
            This class can be used to simplify implementing <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IAudited"/>.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity`1">
            <summary>
            ICreationAudited的简单实现，可以用来作为实体基类
            This class can be used to simplify implementing <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited"/>.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Entity`1">
            <summary>
            具有泛型类型主键的实体类基类, IEntity接口的基本实现
            Basic implementation of IEntity interface.
            An entity can inherit this class of directly implement to IEntity interface.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.IEntity`1">
            <summary>
            Defines interface for base entity type. All entities in the system must implement this interface.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.IEntity`1.IsTransient">
            <summary>
            Checks if this entity is transient (not persisted to database and it has not an <see cref="P:Wikitec.Infrastructure.Domain.Entities.IEntity`1.Id"/>).
            </summary>
            <returns>True, if this entity is transient</returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.IEntity`1.Id">
            <summary>
            Unique identifier for this entity.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity`1.op_Equality(Wikitec.Infrastructure.Domain.Entities.Entity{`0},Wikitec.Infrastructure.Domain.Entities.Entity{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity`1.op_Inequality(Wikitec.Infrastructure.Domain.Entities.Entity{`0},Wikitec.Infrastructure.Domain.Entities.Entity{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity`1.IsTransient">
            <summary>
            检测实体是否为临时的（即没有主键）
            Checks if this entity is transient (it has not an Id).
            </summary>
            <returns>True, if this entity is transient</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity`1.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Entity`1.Id">
            <summary>
            主键
            Unique identifier for this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited">
            <summary>
            标准化接口，有创建审计(CreatorUserId)的实体
            This interface is implemented by entities that is wanted to store creation information (who and when created).
            Creation time and creator user are automatically set when saving <see cref="T:Wikitec.Infrastructure.Domain.Entities.Entity"/> to database.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IHasCreationTime">
            <summary>
            标准化接口，要求有创建时间(CreationTime)
            An entity can implement this interface if <see cref="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IHasCreationTime.CreationTime"/> of this entity must be stored.
            <see cref="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IHasCreationTime.CreationTime"/> can be automatically set when saving <see cref="T:Wikitec.Infrastructure.Domain.Entities.Entity"/> to database.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IHasCreationTime.CreationTime">
            <summary>
            创建时间
            Creation time of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited.CreatorUserId">
            <summary>
            Id of the creator user of this entity.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity`1.CreationTime">
            <summary>
            Creation time of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity`1.CreatorUserId">
            <summary>
            Creator of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IAudited">
            <summary>
            标准化接口，用来标示实体为要审计的（创建人id, 修改人id和修改时间）。
            This interface is implemented by entities which must be audited.
            Related properties automatically set when saving/updating <see cref="T:Wikitec.Infrastructure.Domain.Entities.Entity"/> objects.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IModificationAudited">
            <summary>
            标准化接口，标示当前实体是要修改审计的（修改人id,修改时间）
            This interface is implemented by entities that is wanted to store modification information (who and when modified lastly).
            Properties are automatically set when updating the <see cref="T:Wikitec.Infrastructure.Domain.Entities.IEntity"/>.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IModificationAudited.LastModificationTime">
            <summary>
            The last time of modification.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IModificationAudited.LastModifierUserId">
            <summary>
            Last modifier user for this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity`1.LastModificationTime">
            <summary>
            Last modification date of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity`1.LastModifierUserId">
            <summary>
            Last modifier user of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity`2">
            <summary>
            带有泛型类型主键，并有创建人和修改人审计的实体基类
            This class can be used to simplify implementing <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IAudited`1"/>.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IAudited`1">
            <summary>
            标准化接口，用来标示实体为要审计的（创建人id, 修改人id和修改时间）泛型版本（TUser）。
            Adds navigation properties to <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IAudited"/> interface for user.
            </summary>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited`1">
            <summary>
            标准化接口，有创建审计(CreatorUserId)的实体，泛型版本（TUser）
            Adds navigation properties to <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited"/> interface for user.
            </summary>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited`1.CreatorUser">
            <summary>
            Reference to the creator user of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IModificationAudited`1">
            <summary>
            标准化接口，标示当前实体是要修改审计的（修改人id,修改时间）,泛型版本(TUser)
            Adds navigation properties to <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IModificationAudited"/> interface for user.
            </summary>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IModificationAudited`1.LastModifierUser">
            <summary>
            Reference to the last modifier user of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity`2.CreatorUser">
            <summary>
            Reference to the creator user of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.AuditedEntity`2.LastModifierUser">
            <summary>
            Reference to the last modifier user of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity">
            <summary>
            带有int主键的，有创建人id和创建时间的实体类基类
            A shortcut of <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity`1"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity`2">
            <summary>
            ICreationAudited{TUser}的简单实现，可以用来作为实体基类
            This class can be used to simplify implementing <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited`1"/>.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.CreationAuditedEntity`2.CreatorUser">
            <summary>
            Reference to the creator user of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity">
            <summary>
            有int型主键的完全审计（是否软删除，删除人id，删除时间, 创建人id, 创建时间）实体基类
            A shortcut of <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`1"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`1">
            <summary>
            IFullAudited接口的实现，作为完全审计（是否软删除，删除人id，删除时间）实体的基类
            Implements <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IFullAudited"/> to be a base class for full-audited entities.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IFullAudited">
            <summary>
            标准化接口，要求有完全审计
            This interface ads <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IDeletionAudited"/> to <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IAudited"/> for a fully audited entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IDeletionAudited">
            <summary>
            标准化接口，要求有删除审计（DeleterUserId,DeletionTime,IsDeleted）
            This interface is implemented by entities which wanted to store deletion information (who and when deleted).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.ISoftDelete">
            <summary>
            逻辑删除接口，用来标准化逻辑删除的实体
            Used to standardize soft deleting entities.
            Soft-delete entities are not actually deleted,
            marked as IsDeleted = true in the database,
            but can not be retrieved to the application.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.ISoftDelete.IsDeleted">
            <summary>
            Used to mark an Entity as 'Deleted'. 
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IDeletionAudited.DeleterUserId">
            <summary>
            Which user deleted this entity?
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IDeletionAudited.DeletionTime">
            <summary>
            Deletion time of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`1.IsDeleted">
            <summary>
            Is this entity Deleted?
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`1.DeleterUserId">
            <summary>
            Which user deleted this entity?
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`1.DeletionTime">
            <summary>
            Deletion time of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`2">
            <summary>
            完全审计（是否软删除，删除人id，删除时间）实体基类泛型定义
            Implements <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IFullAudited`1"/> to be a base class for full-audited entities.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of the entity</typeparam>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IFullAudited`1">
            <summary>
            标准化接口，要求有完全审计（创建，修改和删除）,泛型版本(TUser)
            Adds navigation properties to <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IFullAudited"/> interface for user.
            </summary>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IDeletionAudited`1">
            <summary>
            标准化接口，要求有删除审计（DeleterUserId,DeletionTime,IsDeleted）,泛型版本(TUser)
            Adds navigation properties to <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IDeletionAudited"/> interface for user.
            </summary>
            <typeparam name="TUser">Type of the user</typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.IDeletionAudited`1.DeleterUser">
            <summary>
            Reference to the deleter user of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`2.IsDeleted">
            <summary>
            Is this entity Deleted?
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`2.DeleterUser">
            <summary>
            Reference to the deleter user of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`2.DeleterUserId">
            <summary>
            Which user deleted this entity?
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Auditing.FullAuditedEntity`2.DeletionTime">
            <summary>
            Deletion time of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Entity">
            <summary>
            实体类基类, 使用int类型作为主键
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.IEntity">
            <summary>
             标准化接口，拥有int类型主键的实体
            A shortcut of <see cref="T:Wikitec.Infrastructure.Domain.Entities.IEntity`1"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity.Equals(Wikitec.Infrastructure.Domain.Entities.Entity,Wikitec.Infrastructure.Domain.Entities.Entity)">
            <summary>
            比较两个实体
            </summary>
            <param name="x">第一个实体</param>
            <param name="y">第二个实体</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.Entity.GetHashCode(Wikitec.Infrastructure.Domain.Entities.Entity)">
            <summary>
            获得哈希值
            </summary>
            <param name="obj">目标对象</param>
            <returns>哈希值</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.EntityExtensions">
            <summary>
            实体类基类的扩展方法
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Domain.Entities.EntityExtensions.IsNullOrDeleted(Wikitec.Infrastructure.Domain.Entities.ISoftDelete)">
            <summary>
            检测实体是否为null或者被标记为已删除
            Check if this Entity is null of marked as deleted.
            </summary>
            <param name="entity">待检测实体</param>
            <returns>否为null或者被标记为已删除</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.IMayHaveTenant">
            <summary>
            标准化接口，可能有租户id
            Implement this interface for an entity which may optionally have TenantId.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.IMayHaveTenant.TenantId">
            <summary>
            租户id
            TenantId of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.IMustHaveTenant">
            <summary>
            标准化接口，必须有租户id
            Implement this interface for an entity which must have TenantId.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.IMustHaveTenant.TenantId">
            <summary>
            租户id
            TenantId of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.IOrgEntity">
            <summary>
            IOrgEntity
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.IOrgEntity.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.IPassivable">
            <summary>
            可以启用/停用的实体标准化接口
            This interface is used to make an entity active/passive.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.IPassivable.IsActive">
            <summary>
            True: This entity is active.
            False: This entity is not active.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.OrgEntity">
            <summary>
            机构实体
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.OrgEntity.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.OrgEntity`1">
            <summary>
            OrgEntityOfTPrimary
            </summary>
            <typeparam name="T">主键类型
            </typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.OrgEntity`1.OrgId">
            <summary>
            orgid
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.TenantEntity">
            <summary>
            TenantEntity
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.TenantEntity.TenantId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.TenantEntityWithPrimaryKey`1">
            <summary>
            TenantEntity
            </summary>
            <typeparam name="TPrimaryKey">主键类型</typeparam>    
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.TenantEntityWithPrimaryKey`1.TenantId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.TenantEntity`1">
            <summary>
            租户特定的实体类基类
            </summary>
            <typeparam name="TTenant">对象类型</typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.TenantEntity`1.TenantId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.TenantEntity`1.Tenant">
            <summary>
            租户实体
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.TenantEntity`2">
            <summary>
            TenantEntity
            </summary>
            <typeparam name="TPrimaryKey">主键类型</typeparam>
            <typeparam name="TTenant">对象类型</typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.TenantEntity`2.TenantId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.TenantEntity`2.Tenant">
            <summary>
            租户实体
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Tenants.OrgEntity">
            <summary>
            机构实体
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Tenants.OrgEntity.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Domain.Entities.Tenants.OrgEntity`1">
            <summary>
            OrgEntityOfTPrimary
            </summary>
            <typeparam name="T">主键类型
            </typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Domain.Entities.Tenants.OrgEntity`1.OrgId">
            <summary>
            orgid
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.ApiPagedResult`1">
            <summary>
            分页列表对象
            </summary>
            <typeparam name="T">分页数据对象</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.ApiPagedResult`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ApiPagedResult`1.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ApiPagedResult`1.PageIndex">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ApiPagedResult`1.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ApiPagedResult`1.List">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ApiPagedResult`1.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.AuditedEntityDto">
            <summary>
            被审计的实体DTO
            A shortcut of <see cref="T:Wikitec.Infrastructure.Dto.AuditedEntityDto"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.AuditedEntityDto`1">
            <summary>
            This class can be inherited for simple Dto objects those are used for entities implement <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.IAudited"/> interface.
            </summary>
            <typeparam name="TPrimaryKey">Type of primary key</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.CreationAuditedEntityDto`1">
            <summary>
            This class can be inherited for simple Dto objects those are used for entities implement <see cref="T:Wikitec.Infrastructure.Domain.Entities.Auditing.ICreationAudited"/> interface.
            </summary>
            <typeparam name="TPrimaryKey">Type of primary key</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.EntityDto`1">
            <summary>
            Implements common properties for entity based DTOs.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IEntityDto`1">
            <summary>
            Defines common properties for entity based DTOs.
            </summary>
            <typeparam name="TPrimaryKey">主键类型</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IDto">
            <summary>
            This interface must be implemented by all DTO classes to identify them by convention.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.IEntityDto`1.Id">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityDto`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityDto`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityDto`1.#ctor(`0)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityDto`1"/> object.
            </summary>
            <param name="id">Id of the entity</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.EntityDto`1.Id">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.CreationAuditedEntityDto`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.CreationAuditedEntityDto`1.CreationTime">
            <summary>
            Creation date of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.CreationAuditedEntityDto`1.CreatorUserId">
            <summary>
            Creator user's id for this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.AuditedEntityDto`1.LastModificationTime">
            <summary>
            Last modification date of this entity.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.AuditedEntityDto`1.LastModifierUserId">
            <summary>
            Last modifier user of this entity.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.ComboboxItemDto">
            <summary>
            This DTO can be used as a simple item for a combobox/list.
            </summary>    
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.ComboboxItemDto.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.ComboboxItemDto"/>.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.ComboboxItemDto.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.ComboboxItemDto"/>.
            </summary>
            <param name="value">Value of the item</param>
            <param name="displayText">Display text of the item</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ComboboxItemDto.Value">
            <summary>
            Value of the item.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ComboboxItemDto.DisplayText">
            <summary>
            Display text of the item.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.CreationAuditedEntityDto">
            <summary>
             A shortcut of <see cref="T:Wikitec.Infrastructure.Dto.CreationAuditedEntityDto"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.EntityDto">
            <summary>
            A shortcut of <see cref="T:Wikitec.Infrastructure.Dto.EntityDto`1"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IEntityDto">
            <summary>
            A shortcut of <see cref="T:Wikitec.Infrastructure.Dto.IEntityDto`1"/> for most used primary key type (<see cref="T:System.Int32"/>).
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityDto.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityDto"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityDto.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityDto"/> object.
            </summary>
            <param name="id">Id of the entity</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.EntityRequestInput">
            <summary>
            This <see cref="T:Wikitec.Infrastructure.Dto.IInputDto"/> can be used to send Id of an entity to an method.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.EntityRequestInput`1">
            <summary>
            This <see cref="T:Wikitec.Infrastructure.Dto.IInputDto"/> can be used to send Id of an entity to an AppService method.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of entity</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IInputDto">
            <summary>
            This interface is used to define DTOs those are used as input parameters.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Validation.IValidate">
            <summary>
            This interface is implemented by classes those are needed to validate before use.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityRequestInput`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityRequestInput`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityRequestInput`1.#ctor(`0)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityRequestInput`1"/> object.
            </summary>
            <param name="id">Id of the entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityRequestInput.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityRequestInput"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityRequestInput.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityRequestInput"/> object.
            </summary>
            <param name="id">Id of the entity</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.EntityResultOutput">
            <summary>
            This <see cref="T:Wikitec.Infrastructure.Dto.IOutputDto"/> can be used to send Id of an entity as response from an ApplicationService method.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.EntityResultOutput`1">
            <summary>
            This <see cref="T:Wikitec.Infrastructure.Dto.IOutputDto"/> can be used to send Id of an entity as response from an ApplicationService method.
            </summary>
            <typeparam name="TPrimaryKey">Type of the primary key of entity</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IOutputDto">
            <summary>
            This interface is used to define DTOs those are used as output parameters.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityResultOutput`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityResultOutput`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityResultOutput`1.#ctor(`0)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityResultOutput`1"/> object.
            </summary>
            <param name="id">Id of the entity</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityResultOutput.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityResultOutput"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.EntityResultOutput.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.EntityResultOutput"/> object.
            </summary>
            <param name="id">Id of the entity</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IDoubleWayDto">
            <summary>
            This interface can be used to mark a DTO as both of <see cref="T:Wikitec.Infrastructure.Dto.IInputDto"/> and <see cref="T:Wikitec.Infrastructure.Dto.IOutputDto"/>.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IHasLongTotalCount">
            <summary>
            This interface is defined to standardize to set "Total Count of Items" to a DTO for long type.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.IHasLongTotalCount.TotalCount">
            <summary>
            Total count of Items.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IHasTotalCount">
            <summary>
            This interface is defined to standardize to set "Total Count of Items" to a DTO.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.IHasTotalCount.TotalCount">
            <summary>
            Total count of Items.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.ILimitedResultRequest">
            <summary>
            This interface is defined to standardize to request a limited result.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ILimitedResultRequest.MaxResultCount">
            <summary>
            Max expected result count.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IListResult`1">
            <summary>
            This interface is defined to standardize to return a list of items to clients.
            </summary>
            <typeparam name="T">Type of the items in the <see cref="P:Wikitec.Infrastructure.Dto.IListResult`1.Items"/> list</typeparam>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.IListResult`1.Items">
            <summary>
            List of items.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IPagedResult`1">
            <summary>
            This interface is defined to standardize to return a page of items to clients.
            </summary>
            <typeparam name="T">Type of the items in the <see cref="P:Wikitec.Infrastructure.Dto.IListResult`1.Items"/> list</typeparam>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.IPagedResultRequest">
            <summary>
            This interface is defined to standardize to request a paged result.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.IPagedResultRequest.SkipCount">
            <summary>
            Skip count (beginning of the page).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.ISortedResultRequest">
            <summary>
            This interface is defined to standardize to request a sorted result.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ISortedResultRequest.Sorting">
            <summary>
            Sorting information.
            Should include sorting field and optionally a direction (ASC or DESC)
            Can contain more than one field separated by comma (,).
            </summary>
            <example>
            Examples:
            "Name"
            "Name DESC"
            "Name ASC, Age DESC"
            </example>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.ListResultDto`1">
            <summary>
            Implements <see cref="T:Wikitec.Infrastructure.Dto.IListResult`1"/>.
            </summary>
            <typeparam name="T">Type of the items in the <see cref="P:Wikitec.Infrastructure.Dto.ListResultDto`1.Items"/> list</typeparam>
        </member>
        <member name="F:Wikitec.Infrastructure.Dto.ListResultDto`1.items">
            <summary>
            items
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.ListResultDto`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.ListResultDto`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.ListResultDto`1.#ctor(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.ListResultDto`1"/> object.
            </summary>
            <param name="items">List of items</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.ListResultDto`1.Items">
            <summary>
            List of items.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.ListResultOutput`1">
            <summary>
            This class can be used to return a list from an ApplicationService method.
            </summary>
            <typeparam name="T">Type of the items in the <see cref="P:Wikitec.Infrastructure.Dto.ListResultDto`1.Items"/> list</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.ListResultOutput`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.ListResultOutput`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.ListResultOutput`1.#ctor(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.ListResultOutput`1"/> object.
            </summary>
            <param name="items">List of items</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.NameValueDto">
            <summary>
            Can be used to send/receive Name/Value (or Key/Value) pairs.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.NameValueDto.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.NameValueDto"/>.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.NameValueDto.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.NameValueDto"/>.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.NameValueDto.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.NameValueDto.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.PagedResultDto`1">
            <summary>
            Implements <see cref="T:Wikitec.Infrastructure.Dto.IPagedResult`1"/>.
            </summary>
            <typeparam name="T">Type of the items in the <see cref="P:Wikitec.Infrastructure.Dto.ListResultDto`1.Items"/> list</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.PagedResultDto`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.PagedResultDto`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.PagedResultDto`1.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{`0})">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.PagedResultDto`1"/> object.
            </summary>
            <param name="totalCount">Total count of Items</param>
            <param name="items">List of items in current page</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.PagedResultDto`1.TotalCount">
            <summary>
            Total count of Items.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.PagedResultOutput`1">
            <summary>
            This class can be used to return a paged list from an ApplicationService method.
            </summary>
            <typeparam name="T">Type of the items in the <see cref="!:PagedResultDto&lt;T&gt;.Items"/> list</typeparam>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.PagedResultOutput`1.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.PagedResultOutput`1"/> object.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.PagedResultOutput`1.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{`0})">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.PagedResultOutput`1"/> object.
            </summary>
            <param name="totalCount">Total count of Items</param>
            <param name="items">List of items in current page</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.DateTimeFormatDto">
            <summary>
            Can be used to send/receive Name/Value (or Key/Value) pairs.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.DateTimeFormatDto.#ctor">
            <summary>
            Creates a new <see cref="T:Wikitec.Infrastructure.Dto.NameValueDto"/>.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.DateTimeFormatDto.I">
            <summary>
            代表格式 yyyy/MM/dd
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.DateTimeFormatDto.M">
            <summary>
            代表格式 HH:mm
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.DateTimeFormatDto.S">
            <summary>
            代表格式 yyy-MM-dd HH:mm
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Dto.PagerDto">
            <summary>
            分页对象实体类
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.PagerDto.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Dto.PagerDto.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="pageindex">页码</param>
            <param name="pagesize">页大小</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.PagerDto.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Dto.PagerDto.PageIndex">
            <summary>
            页码
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Exceptions.UserFriendlyException">
            <summary>
            This exception type is directly shown to the user.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.UserFriendlyException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.UserFriendlyException.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
            <param name="details">Additional information about the exception</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.UserFriendlyException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.UserFriendlyException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
            <param name="details">Additional information about the exception</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Exceptions.UserFriendlyException.Details">
            <summary>
            Additional information about the exception.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Exceptions.AppAuthorizationException">
            <summary>
            没有权限的异常
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.AppAuthorizationException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Log">
            <summary>
            Log
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Log.Lockerlogwrite">
            <summary>
            The lockerlogwrite.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Log.WriteLineForRabbitMQ(System.String)">
            <summary>
            针对rabbitmq的日志，不想rabbitmq发送消息，否则会死循环
            </summary>
            <param name="message">消息内容</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Log.WriteLine(System.String)">
            <summary>
            直接记录一条日志消息
            </summary>
            <param name="message">一条日志消息</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Log.WriteLineForHtttp(System.Exception,System.Web.HttpRequestBase)">
            <summary>
            记录HTTP相关的异常
            </summary>
            <param name="exception">exception</param>
            <param name="request">request</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Log.WriteLine(System.String,System.String)">
            <summary>
            记录异常
            </summary>
            <param name="directoryName">文件夹名称</param>
            <param name="message">日志内容</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Log.SendMessage(System.String)">
            <summary>
            发送日志消息到日志队列
            </summary>
            <param name="message">消息内容</param>
        </member>
        <member name="T:Wikitec.Infrastructure.LogMessage">
            <summary>
            日志消息
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.LogMessage.SystemAlias">
            <summary>
            系统的别名，用于区分异常产生于哪个系统
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.LogMessage.Time">
            <summary>
            日志时间
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.LogMessage.Message">
            <summary>
            日志消息
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Message.RabbitMqClient">
            <summary>
            RabbitMQ相关的消息处理方法
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Message.RabbitMqClient._hostName">
            <summary>
            RabbitMQ 服务器名
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Message.RabbitMqClient.OnNewMessage">
            <summary>
            当有新消息后的事件
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Message.RabbitMqClient.#ctor(System.String)">
            <summary>
            使用hostname创建rabbitmqclient
            </summary>
            <param name="hostName"></param>
        </member>
        <member name="M:Wikitec.Infrastructure.Message.RabbitMqClient.SendMessage(System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="queueName">消息队列的名称</param>
            <param name="message">消息内容，字符串格式，建议传递JSON</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Message.RabbitMqClient.StartWaitingForMessage(System.String)">
            <summary>
            开始监听消息
            !!注意，启动之后，之后的同步将无法继续执行
            </summary>
            <param name="queueName">消息队列的名称</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Message.RabbitMqClient.HostName">
            <summary>
            RabbitMQ 服务器名
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.Authorization.AppAuthorize">
            <summary>
            AppAuthorize
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Authorization.AppAuthorize.SignleSignOut(System.Web.HttpRequestBase,System.Web.HttpResponseBase)">
            <summary>
            统一退出
            </summary>
            <param name="request">request</param>
            <param name="response">response</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.BaseController">
            <summary>
            AppController
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.Authorization.AppAuthorizeAttribute">
            <summary>
            AppAuthorizeAttribute
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Authorization.AppAuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            重写OnAuthorization，当验证失败的时候，跳转到登陆页面并将当前页面的绝对路径作为参数带上
            </summary>
            <param name="filterContext">filterContext</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Authorization.AppAuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>
            验证方法
            </summary>
            <param name="httpContext">当前HTTP上下文</param>
            <returns>是否是合法用户</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.Authorization.IAuthorizeAttributeHelper">
            <summary>
            AuthorizeAttributeHelper接口
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Authorization.IAuthorizeAttributeHelper.Authorize(System.Web.HttpContextBase)">
            <summary>
            验证
            </summary>
            <param name="context">HTTP上下文</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.ControllerExtensions">
            <summary>
            ControllerExtensions
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.ControllerExtensions.Jsonp(System.Web.Mvc.Controller,System.Object)">
            <summary>
            Extension methods for the controller to allow jsonp.
            </summary>
            <param name="controller">The controller.</param>
            <param name="data">The data.</param>
            <returns>JsonpResult</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.Filter.ExceptionFilterAttribute">
            <summary>
            ExceptionFilterAttribute, 自定义的异常过滤器
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Filter.ExceptionFilterAttribute.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            当发生异常时
            </summary>
            <param name="context">当前异常上下文</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Filter.ExceptionFilterAttribute.HandleAjaxException(System.Web.Mvc.ExceptionContext)">
            <summary>
            处理AJAX异常
            </summary>
            <param name="context">当前异常上下文</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Filter.ExceptionFilterAttribute.HandleNonAjaxException(System.Web.Mvc.ExceptionContext)">
            <summary>
            处理非AJAX异常
            </summary>
            <param name="context">当前异常上下文</param>
            <returns>AcitonResult</returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Mvc.Filter.ExceptionFilterAttribute.View">
            <summary>
            当出现异常时，需要跳转到的视图名称
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.Jsonp.JsonpResult">
            <summary>
            JsonpResult
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Mvc.Jsonp.JsonpResult.JsonpCallbackName">
            <summary>
            jsonp回调函数名key 
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Mvc.Jsonp.JsonpResult.CallbackApplicationType">
            <summary>
            CallbackApplicationType
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.Jsonp.JsonpResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from the <see cref="T:System.Web.Mvc.ActionResult"/> class.
            </summary>
            <param name="context">The context within which the result is executed.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="context"/> parameter is null.</exception>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.ModelBinder.FromJsonAttribute">
            <summary>
            提供JsonModelBinder的CustomModelBinderAttribute
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.ModelBinder.JsonModelBinder">
            <summary>
            JsonModelBinder
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.RouteCollectionExtension">
            <summary>
            RouteCollection扩展方法
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.RouteCollectionExtension.MapTenantsRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
            <summary>
            匹配多租户路由
            </summary>
            <param name="routes">routes</param>
            <param name="name">name</param>
            <param name="url">url</param>
            <param name="defaults">defaults</param>
            <param name="constraints">constraints</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.TenantRoute">
            <summary>
            自定义路由，用于多租户
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.TenantRoute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="url">url</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.TenantRoute.GetRouteData(System.Web.HttpContextBase)">
            <summary>
            GetRouteData
            </summary>
            <param name="httpContext">httpContext</param>
            <returns>RouteData</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.TenantRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
            <summary>
            GetVirtualPath
            </summary>
            <param name="requestContext">requestContext</param>
            <param name="values">values</param>
            <returns>VirtualPathData</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Reflection.AssemblyLocator">
            <summary>
            http://stackoverflow.com/questions/3552223/asp-net-appdomain-currentdomain-getassemblies-assemblies-missing-after-app
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Reflection.DefaultAssemblyFinder">
            <summary>
            DefaultAssemblyFinder
            If gets assemblies from current domain.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Reflection.DefaultAssemblyFinder.#ctor">
            <summary>
            Private constructor to disable instancing.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Reflection.DefaultAssemblyFinder.GetAllBinAssemblies">
            <summary>
            专门针对asp.net bin目录的程序及获取，因为在app domain回收重启之后，不是所有的程序集会被加载到app domain中
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Reflection.DefaultAssemblyFinder.Instance">
            <summary>
            Gets Singleton instance of <see cref="T:Wikitec.Infrastructure.Reflection.DefaultAssemblyFinder"/>.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Reflection.Extensions.MemberInfoExtensions">
            <summary>
            Extensions to <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Reflection.Extensions.MemberInfoExtensions.GetSingleAttributeOrNull``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Gets a single attribute for a member.
            </summary>
            <typeparam name="T">Type of the attribute</typeparam>
            <param name="memberInfo">The member that will be checked for the attribute</param>
            <param name="inherit">Include inherited attributes</param>
            <returns>Returns the attribute object if found. Returns null if not found.</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Reflection.ReflectionHelper">
            <summary>
            Defines helper methods for reflection.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Reflection.ReflectionHelper.IsAssignableToGenericType(System.Type,System.Type)">
            <summary>
            Checks whether <paramref name="givenType"/> implements/inherits <paramref name="genericType"/>.
            </summary>
            <param name="givenType">Type to check</param>
            <param name="genericType">Generic type</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Reflection.ReflectionHelper.GetAttributesOfMemberAndDeclaringType``1(System.Reflection.MemberInfo)">
            <summary>
            Gets a list of attributes defined for a class member and it's declaring type including inherited attributes.
            </summary>
            <typeparam name="TAttribute">Type of the attribute</typeparam>
            <param name="memberInfo">MemberInfo</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Runtime.Session.IAppSession">
            <summary>
            Defines some session information that can be useful for applications.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Runtime.Session.IAppSession.UserId">
            <summary>
            Gets current UserId or null.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Runtime.Session.IAppSession.TenantId">
            <summary>
            Tenant Id or null
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Runtime.Session.IAppSession.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Runtime.Session.NullAppSession">
            <summary>
            Implements null object pattern for <see cref="T:Wikitec.Infrastructure.Runtime.Session.IAppSession"/>.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Runtime.Session.NullAppSession.Instance">
            <summary>
            Singleton instance.
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Runtime.Session.NullAppSession.UserId">
            <inheritdoc/>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.BuildNo">
            <summary>
            BuildNO
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Toolkit.BuildNo._rep">
            <summary>
            rep
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.BuildNo.Build(System.String)">
            <summary>
            生成单号
            </summary>
            <param name="formcode">前缀</param>
            <returns>返回单号</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.BuildNo.GenerateCheckCode(System.Int32)">
            <summary> 
            生成随机字母字符串(数字字母混和) 
            </summary> 
            <param name="codeCount">待生成的位数</param> 
            <returns>生成的字母字符串</returns> 
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.EncryptHelper">
            <summary>
            MD5加密算法
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.EncryptHelper.MD5With32(System.String)">
            <summary> 
            MD5　32位加密 
            </summary> 
            <param name="str">字符串</param> 
            <returns>返回MD5 32位加密以后的字符串</returns> 
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.EncryptHelper.EncodeBase64(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="source">待加密字符串</param>
            <returns>加密后的Base64字符串</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.EncryptHelper.DecodeBase64(System.String)">
            <summary>
            Base64 解密
            </summary>
            <param name="result">待解密的字符串</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.EnumHelper.EnumComboboxItem(System.Type)">
            <summary>
            获取枚举下拉绑定数据源
            </summary>
            <param name="enumType">枚举类型</param>
            <returns>返回ComboboxItem列表</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.EnumHelper.EnumListTable(System.Type)">
            <summary>
            获得某个Enum类型的绑定列表
            </summary>
            <param name="enumType">枚举的类型，例如：typeof(Sex)</param>
            <returns>
            返回一个DataTable
            DataTable 有两列：    "Text"    : System.String;
                                   "Value"    : System.Char
            </returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.EnumHelper.EnumListDictionary(System.Type)">
            <summary>
            获得某个Enum类型的绑定列表
            </summary>
            <param name="enumType">枚举的类型，例如：typeof(Sex)</param>
            <returns>
            返回一个Dictionary
            </returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.EnumHelper.GetDescriptionByValue(System.Type,System.String)">
            <summary>
            根据枚举value返回该value的Description，如果Description不存在，则返回该value的key
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.Hasher">
            <summary>
            Hasher
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.Hasher.GetMd5Hash(System.String)">
            <summary>
            获得输入字符串的MD5哈希值
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.HttpHelper">
            <summary>
             Http访问辅助类
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.HttpHelper.GetResponse(System.String)">
            <summary>
            向指定的URL发送请求，并获取响应字符串（同步方式）
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.JsonHelper">
            <summary>
            Json工具类
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.JsonHelper.Obj2JsonStr``1(``0)">
            <summary>   
            将对象转化为Json字符串   
            </summary>   
            <param name="obj">源对象</param>   
            <returns>json数据</returns>   
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.JsonHelper.JsonStr2Obj``1(System.String)">
            <summary>   
            将Json字符串转化为对象  
            </summary>   
            <param name="strJson">Json字符串</param>   
            <returns>目标对象</returns>  
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.HanziToPingyin">
            <summary>
            汉字转拼音（包含正体字）
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.HanziToPingyin.Convert(System.String,System.Boolean)">
            <summary>
            返回拼音
            </summary>
            <param name="chineseStr">要转换的汉字字符串</param>
            <param name="isFrist">true全拼/false首拼</param>
            <returns>返回拼音</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.JsTreeNode">
            <summary>
            用来传递给jstree的JSON节点
            注：这里的属性名和jstree规定的属性名一致）
            http://www.jstree.com/docs/json/
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.JsTreeNode.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.JsTreeNode.text">
            <summary>
            显示的文本
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.JsTreeNode.id">
            <summary>
            id， jstree拿这个来构建树，所有在一个jstree里面不能有相同的id的节点
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.JsTreeNode.state">
            <summary>
            节点的状态
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.JsTreeNode.type">
            <summary>
            节点的类型
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.JsTreeNode.children">
            <summary>
            子节点列表
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.JsTreeNode.exts">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.JsTreeNode.a_attr">
            <summary>
            link属性
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.State">
            <summary>
            节点类型 
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.State.selected">
            <summary>
            是否被选中
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.State.opened">
            <summary>
            是否打开
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.State.disabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.OpenXml.OpenXmlHelper">
            <summary>
            OpenXmlHelper
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.OpenXmlHelper.CreateExcelByDataTable(System.String,System.Collections.Generic.Dictionary{System.String,System.Data.DataTable})">
            <summary>
            通过DataTable数据源，创建Excel文件。（Excel模板的Sheet名称必须为中文）
            </summary>
            <remarks>
            Excel模板文件中，有动态项和固定项之分。
            固定项：数据是不需要进行循环插入来显示的数据。
            动态项：数据是需要循环插入来显示数据。
            固定项的别名必须以F_开头，格式为：F_TableName_ItemName。
            动态项的别名必须以D_开头，格式为：D_TableName_ItemName。
            </remarks>
            <param name="templateUrl">模板文件地址</param>
            <param name="tables">DataTable数据源</param>
            <returns>返回新生产的Excel文件Url</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.OpenXmlHelper.CreateExcelByObject(System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            通过对象数据源，创建Excel文件。（Excel模板的Sheet名称必须为中文）
            </summary>
            <remarks>
            Excel模板文件中，有动态项和固定项之分。
            固定项：数据是不需要进行循环插入来显示的数据。
            动态项：数据是需要循环插入来显示数据。
            固定项的别名必须以F_开头，格式为：F_ItemName。
            动态项的别名必须以D_开头，格式为：D_ItemName。
            objects中的对象，如果有动态项，则属性名称必须为Items
            </remarks>
            <param name="templateUrl">Excel模板地址（相对地址,如：/upload/template.xlxs）</param>
            <param name="objects">需要导出的数据</param>
            <returns>返回生成的Excel文件地址</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.OpenXml.Utility">
            <summary>
            OpenXml工具类
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.Utility.GetRowIndex(System.String)">
            <summary>
            Given a cell name, parses the specified cell to get the row index.
            </summary>
            <param name="cellReference">Address of the cell (ie. B2)</param>
            <returns>Row Index (ie. 2)</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.Utility.GetColumnIndex(System.String)">
            <summary>
            Given a cell name, parses the specified cell to get the column index.
            </summary>
            <param name="cellReference">Address of the cell (ie. C2)</param>
            <returns>Row Index (ie. 3)</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.Utility.GetColumnLetter(System.String)">
            <summary>
            Given a cell name, parses the specified cell to get the column index.
            </summary>
            <param name="cellReference">Address of the cell (ie. C2)</param>
            <returns>Row Letter (ie. C)</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.Utility.ToColumnLetter(System.Int32)">
            <summary>
            将column从12345 转换成 ABCDE
            </summary>
            <param name="colindex"></param>
            <returns></returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.Utility.GetCellAddr(System.String)">
            <summary>
            得到一个cell区域的开始 如sheet1!A1:B3,返回{A1,B3} 或者 Sheet3!$B$3:$F$3 返回{B3,F3}
            </summary>
            <param name="celladdr">一个单元格的地址</param>
            <returns></returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.OpenXml.Utility.AddRow(System.String)">
            <summary>
            增加新的行
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.RandomNumberHelper">
            <summary>
            随机数生成辅助类
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.SendEmailHelper">
            <summary>
            发送邮件帮助类
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.SendEmailHelper.SendEmail(System.String,System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="subject">主题</param>
            <param name="body">主体</param>
            <param name="to">接收者</param>
            <param name="userName">接收人姓名</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.SendEmailHelper.Completed(System.String)">
            <summary>
            邮件发送后的回调方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.MailHelper">
            <summary>
            邮件帮助类
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Toolkit.MailHelper._actionSendCompletedCallback">
            <summary>
            回调方法
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.MailHelper.SendAsync(System.String,System.String,System.String,System.Action{System.String})">
            <summary>
            使用异步发送邮件
            </summary>
            <param name="subject">主题</param>
            <param name="body">内容</param>
            <param name="to">接收者,以,分隔多个接收者</param>
            <param name="actinCompletedCallback">邮件发送后的回调方法</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.MailHelper.SendCompletedCallback(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            异步操作完成后执行回调方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.MailHelper.Subject">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.MailHelper.Body">
            <summary>
            主体内容
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.MailHelper.Tos">
            <summary>
            接收者
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.MailHelper.EnableSsl">
            <summary>
            加密连接
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.MailHelper.GetClient">
            <summary>
            获取邮件相关信息
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.MailHelper.GetSmtpClient">
            <summary>
            获取邮件配置
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.MailHelper.MethodDelegate">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.UserCache">
            <summary>
            用户信息缓存
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Toolkit.UserCache.SingleInstance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Toolkit.UserCache.CacheService">
            <summary>
            缓存服务
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.#ctor">
            <summary>
            构造函数，私有的。
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.Add(System.String,Wikitec.Infrastructure.Toolkit.UserCacheDto,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存标识</param>
            <param name="dto">缓存对象</param>
            <param name="expires">缓存过期时间</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.Get(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <param name="key">缓存标识</param>
            <returns>缓存对象</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.GetAttribute(System.String,System.String,Wikitec.Infrastructure.Toolkit.UserCacheDto)">
            <summary>
            获取缓存对象属性值
            </summary>
            <param name="key">缓存标识</param>
            <param name="attribute">缓存对象属性名</param>
             <param name="dto">缓存对象</param>
            <returns>缓存对象属性值</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.AddDics(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存标识</param>
            <param name="idc">缓存键值对链表</param>
            <param name="expires">缓存过期时间</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.GetDic(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <param name="key">缓存标识</param>
            <returns>缓存键值对链表</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.GetDicByKey(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            获取缓存对象属性值
            </summary>
            <param name="key">缓存标识</param>
            <param name="attribute">缓存对象属性名</param>
            <param name="idc">缓存对象</param>
            <returns>缓存对象属性值</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.UserCache.IsExit(System.String)">
            <summary>
            判断缓存对象是否存在
            </summary>
            <param name="key">缓存标识</param>
            <returns></returns>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCache.Instance">
            <summary>
            UserCache的唯一实例
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.UserCacheDto">
            <summary>
            缓存对象
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.LoginName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.RealName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.RoleName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.OrgId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.OrgCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.OrgName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.Orgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.Funcs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.Buttons">
            <summary>
            
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.UserCacheDto.MenuFuncs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.WordReplaceHelper.#ctor(System.Collections.Generic.List{Wikitec.Infrastructure.Toolkit.WordValue})">
            <summary>
            构造
            </summary>
            <param name="WordValues">标签值</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.WordReplaceHelper.ExportWordForTemplete(System.String,System.String)">
            <summary>
            替换内容并导出
            </summary>
            <param name="templetePathandName">模板路径</param>
            <param name="saasPathandFile">保存路径</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.WordReplaceHelper.WordValues">
            <summary>
            存放标签值
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.WordValue.#ctor(System.String,System.Object)">
            <summary>
            书签构造函数
            </summary>
            <param name="bookmarks">书签名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.WordValue.#ctor(System.String,System.Nullable{Microsoft.Office.Interop.Word.WdFieldType},System.Object)">
            <summary>
            书签构造函数
            </summary>
            <param name="bookmarks">书签名称</param>
            <param name="type">类型（目前只支持checkbox）</param>
            <param name="value">值</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.WordValue.Bookmark">
            <summary>
            书签名称
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.WordValue.Type">
            <summary>
            类型(现在暂且用到CheckBox)
            </summary>
        </member>
        <member name="P:Wikitec.Infrastructure.Toolkit.WordValue.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Toolkit.ZipHelper">
            <summary>
            Gzip压缩辅助类
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.ZipHelper.GetDatasetByString(System.String)">
            <summary>  
            解压  
            </summary>  
            <param name="Value"></param>  
            <returns></returns>  
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.ZipHelper.GetStringByDataset(System.String)">
            <summary>  
            根据DATASET压缩字符串  
            </summary>  
            <param name="ds"></param>  
            <returns></returns>  
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.ZipHelper.GZipCompressString(System.String)">
            <summary>  
            将传入字符串以GZip算法压缩后，返回Base64编码字符  
            </summary>  
            <param name="rawString">需要压缩的字符串</param>  
            <returns>压缩后的Base64编码的字符串</returns>  
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.ZipHelper.Compress(System.Byte[])">
            <summary>  
            GZip压缩  
            </summary>  
            <param name="rawData"></param>  
            <returns></returns>  
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.ZipHelper.GZipDecompressString(System.String)">
            <summary>  
            将传入的二进制字符串资料以GZip算法解压缩  
            </summary>  
            <param name="zippedString">经GZip压缩后的二进制字符串</param>  
            <returns>原始未压缩字符串</returns>  
        </member>
        <member name="M:Wikitec.Infrastructure.Toolkit.ZipHelper.Decompress(System.Byte[])">
            <summary>  
            ZIP解压  
            </summary>  
            <param name="zippedData"></param>  
            <returns></returns>  
        </member>
        <member name="T:Wikitec.Infrastructure.Unity.Aop.InterceptionRegister">
            <summary>
            InterceptionRegister
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Unity.Aop.ValidationInterceptionBehavior">
            <summary>
            ValidationInterceptionBehavior
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Unity.Ioc.IocManager">
            <summary>
            Resolver
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Unity.Ioc.IocManager.Resolve``1">
            <summary>
            从IOC容器中获取一个对象
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Unity.Ioc.IocManager.IsRegistered(System.Type)">
            <summary>
            检查给定的类型是否被注册
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager">
            <summary>
            PerExecutionContextLifetimeManager
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager.cache">
            <summary>
            contextCache
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager.key">
            <summary>
            key
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager.#ctor(System.Guid)">
            <summary>
            构造函数
            </summary>
            <param name="key">key</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager.GetValue">
            <summary>
            GetValue
            </summary>
            <returns>object</returns>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager.RemoveValue">
            <summary>
            RemoveValue
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.PerExecutionContextLifetimeManager.SetValue(System.Object)">
            <summary>
            SetValue
            </summary>
            <param name="newValue">newValue</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Mvc.UnityControllerFactory">
            <summary>
            UnityControllerFactory
            </summary>
        </member>
        <member name="F:Wikitec.Infrastructure.Mvc.UnityControllerFactory.container">
            <summary>
            ioc容器
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.UnityControllerFactory.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            构造函数
            </summary>
            <param name="container"> ioc容器</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Mvc.UnityControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
            <summary>
            GetControllerInstance
            </summary>
            <param name="requestContext">requestContext</param>
            <param name="controllerType">controllerType</param>
            <returns>IController</returns>
        </member>
        <member name="T:Wikitec.Infrastructure.Validation.ICustomValidate">
            <summary>
            Defines interface that must be implemented by classes those must be validated with custom rules.
            So, implementing class can define it's own validation logic.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Validation.ICustomValidate.AddValidationErrors(System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            This method is used to validate the object.
            </summary>
            <param name="results">List of validation results (errors). Add validation errors to this list.</param>
        </member>
        <member name="T:Wikitec.Infrastructure.Validation.IShouldNormalize">
            <summary>
            This interface is used to normalize inputs before method execution.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Validation.IShouldNormalize.Normalize">
            <summary>
            This method is called lastly before method execution (after validation if exists).
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.Validation.MethodInvocationValidator">
            <summary>
             This class is used to validate a method call (invocation) for method arguments.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Validation.MethodInvocationValidator.#ctor(System.Reflection.MethodBase,System.Object[])">
            <summary>
            Creates a new MethodInvocationValidator instance.
            </summary>
            <param name="method">Method to be validated</param>
            <param name="parameterValues">List of arguments those are used to call the <paramref name="method"/>.</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Validation.MethodInvocationValidator.Validate">
            <summary>
            Validates the method invocation.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Validation.MethodInvocationValidator.ValidateMethodParameter(System.Reflection.ParameterInfo,System.Object)">
            <summary>
            Validates given parameter for given value.
            </summary>
            <param name="parameterInfo">Parameter of the method to validate</param>
            <param name="parameterValue">Value to validate</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Validation.MethodInvocationValidator.SetValidationAttributeErrors(System.Object)">
            <summary>
            Checks all properties for DataAnnotations attributes.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Wikitec.Infrastructure.Validation.MethodInvocationValidator.IsNullableType(System.Type)" -->
        <member name="T:Wikitec.Infrastructure.Exceptions.ValidationException">
            <summary>
            This exception type is used to throws validation exceptions.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.ValidationException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for serializing.
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.ValidationException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.ValidationException.#ctor(System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
            <param name="validationErrors">Validation errors</param>
        </member>
        <member name="M:Wikitec.Infrastructure.Exceptions.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="P:Wikitec.Infrastructure.Exceptions.ValidationException.ValidationErrors">
            <summary>
            Detailed list of validation errors for this exception.
            </summary>
        </member>
        <member name="T:Wikitec.Infrastructure.WebApi.Filter.HttpExceptionFilterAttribute">
            <summary>
            WebApi Http请求时的异常处理
            </summary>
        </member>
        <member name="M:Wikitec.Infrastructure.WebApi.Filter.HttpExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            引发异常事件。
            </summary>
            <param name="actionExecutedContext">表示 HTTP 执行的上下文的操作。</param>
        </member>
        <member name="T:Wikitec.Infrastructure.WebApi.WebApiBaseController">
            <summary>
            WebApi基类
            </summary>
        </member>
    </members>
</doc>
